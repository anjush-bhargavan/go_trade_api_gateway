// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: admin.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdminResponse_Status int32

const (
	AdminResponse_OK    AdminResponse_Status = 0
	AdminResponse_ERROR AdminResponse_Status = 1
)

// Enum value maps for AdminResponse_Status.
var (
	AdminResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	AdminResponse_Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x AdminResponse_Status) Enum() *AdminResponse_Status {
	p := new(AdminResponse_Status)
	*p = x
	return p
}

func (x AdminResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AdminResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_proto_enumTypes[0].Descriptor()
}

func (AdminResponse_Status) Type() protoreflect.EnumType {
	return &file_admin_proto_enumTypes[0]
}

func (x AdminResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AdminResponse_Status.Descriptor instead.
func (AdminResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10, 0}
}

type AdminOrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*AdminOrder `protobuf:"bytes,1,rep,name=Orders,proto3" json:"Orders,omitempty"`
}

func (x *AdminOrderList) Reset() {
	*x = AdminOrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOrderList) ProtoMessage() {}

func (x *AdminOrderList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOrderList.ProtoReflect.Descriptor instead.
func (*AdminOrderList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{0}
}

func (x *AdminOrderList) GetOrders() []*AdminOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type AdminOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order_ID   uint32  `protobuf:"varint,1,opt,name=Order_ID,json=OrderID,proto3" json:"Order_ID,omitempty"`
	User_ID    uint32  `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3" json:"User_ID,omitempty"`
	Seller_ID  uint32  `protobuf:"varint,3,opt,name=Seller_ID,json=SellerID,proto3" json:"Seller_ID,omitempty"`
	Product_ID uint32  `protobuf:"varint,4,opt,name=Product_ID,json=ProductID,proto3" json:"Product_ID,omitempty"`
	Amount     float32 `protobuf:"fixed32,5,opt,name=Amount,proto3" json:"Amount,omitempty"`
	Payment_ID string  `protobuf:"bytes,6,opt,name=Payment_ID,json=PaymentID,proto3" json:"Payment_ID,omitempty"`
}

func (x *AdminOrder) Reset() {
	*x = AdminOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminOrder) ProtoMessage() {}

func (x *AdminOrder) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminOrder.ProtoReflect.Descriptor instead.
func (*AdminOrder) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{1}
}

func (x *AdminOrder) GetOrder_ID() uint32 {
	if x != nil {
		return x.Order_ID
	}
	return 0
}

func (x *AdminOrder) GetUser_ID() uint32 {
	if x != nil {
		return x.User_ID
	}
	return 0
}

func (x *AdminOrder) GetSeller_ID() uint32 {
	if x != nil {
		return x.Seller_ID
	}
	return 0
}

func (x *AdminOrder) GetProduct_ID() uint32 {
	if x != nil {
		return x.Product_ID
	}
	return 0
}

func (x *AdminOrder) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdminOrder) GetPayment_ID() string {
	if x != nil {
		return x.Payment_ID
	}
	return ""
}

type Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float32 `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Amount) Reset() {
	*x = Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Amount) ProtoMessage() {}

func (x *Amount) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Amount.ProtoReflect.Descriptor instead.
func (*Amount) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{2}
}

func (x *Amount) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AdminProductList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*AdminProduct `protobuf:"bytes,1,rep,name=Products,proto3" json:"Products,omitempty"`
}

func (x *AdminProductList) Reset() {
	*x = AdminProductList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminProductList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminProductList) ProtoMessage() {}

func (x *AdminProductList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminProductList.ProtoReflect.Descriptor instead.
func (*AdminProductList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{3}
}

func (x *AdminProductList) GetProducts() []*AdminProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type AdminProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string         `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Seller_ID          uint32         `protobuf:"varint,2,opt,name=Seller_ID,json=SellerID,proto3" json:"Seller_ID,omitempty"`
	Category           *AdminCategory `protobuf:"bytes,3,opt,name=Category,proto3" json:"Category,omitempty"`
	Base_Price         uint32         `protobuf:"varint,4,opt,name=Base_Price,json=BasePrice,proto3" json:"Base_Price,omitempty"`
	Description        string         `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Bidding_Type       bool           `protobuf:"varint,6,opt,name=Bidding_Type,json=BiddingType,proto3" json:"Bidding_Type,omitempty"`
	Bidding_Start_Time string         `protobuf:"bytes,7,opt,name=Bidding_Start_Time,json=BiddingStartTime,proto3" json:"Bidding_Start_Time,omitempty"`
	Bidding_End_Time   string         `protobuf:"bytes,8,opt,name=Bidding_End_Time,json=BiddingEndTime,proto3" json:"Bidding_End_Time,omitempty"`
	Listed_On          string         `protobuf:"bytes,9,opt,name=Listed_On,json=ListedOn,proto3" json:"Listed_On,omitempty"`
	Product_ID         uint32         `protobuf:"varint,10,opt,name=Product_ID,json=ProductID,proto3" json:"Product_ID,omitempty"`
	Status             string         `protobuf:"bytes,11,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *AdminProduct) Reset() {
	*x = AdminProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminProduct) ProtoMessage() {}

func (x *AdminProduct) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminProduct.ProtoReflect.Descriptor instead.
func (*AdminProduct) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{4}
}

func (x *AdminProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminProduct) GetSeller_ID() uint32 {
	if x != nil {
		return x.Seller_ID
	}
	return 0
}

func (x *AdminProduct) GetCategory() *AdminCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *AdminProduct) GetBase_Price() uint32 {
	if x != nil {
		return x.Base_Price
	}
	return 0
}

func (x *AdminProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AdminProduct) GetBidding_Type() bool {
	if x != nil {
		return x.Bidding_Type
	}
	return false
}

func (x *AdminProduct) GetBidding_Start_Time() string {
	if x != nil {
		return x.Bidding_Start_Time
	}
	return ""
}

func (x *AdminProduct) GetBidding_End_Time() string {
	if x != nil {
		return x.Bidding_End_Time
	}
	return ""
}

func (x *AdminProduct) GetListed_On() string {
	if x != nil {
		return x.Listed_On
	}
	return ""
}

func (x *AdminProduct) GetProduct_ID() uint32 {
	if x != nil {
		return x.Product_ID
	}
	return 0
}

func (x *AdminProduct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AdminNoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdminNoParam) Reset() {
	*x = AdminNoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminNoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminNoParam) ProtoMessage() {}

func (x *AdminNoParam) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminNoParam.ProtoReflect.Descriptor instead.
func (*AdminNoParam) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{5}
}

type AdID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AdID) Reset() {
	*x = AdID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdID) ProtoMessage() {}

func (x *AdID) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdID.ProtoReflect.Descriptor instead.
func (*AdID) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{6}
}

func (x *AdID) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type AdminCategoryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*AdminCategory `protobuf:"bytes,1,rep,name=Categories,proto3" json:"Categories,omitempty"`
}

func (x *AdminCategoryList) Reset() {
	*x = AdminCategoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCategoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCategoryList) ProtoMessage() {}

func (x *AdminCategoryList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCategoryList.ProtoReflect.Descriptor instead.
func (*AdminCategoryList) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{7}
}

func (x *AdminCategoryList) GetCategories() []*AdminCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type AdminCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category_ID uint32 `protobuf:"varint,1,opt,name=Category_ID,json=CategoryID,proto3" json:"Category_ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *AdminCategory) Reset() {
	*x = AdminCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCategory) ProtoMessage() {}

func (x *AdminCategory) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCategory.ProtoReflect.Descriptor instead.
func (*AdminCategory) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{8}
}

func (x *AdminCategory) GetCategory_ID() uint32 {
	if x != nil {
		return x.Category_ID
	}
	return 0
}

func (x *AdminCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AdminLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *AdminLogin) Reset() {
	*x = AdminLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLogin) ProtoMessage() {}

func (x *AdminLogin) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLogin.ProtoReflect.Descriptor instead.
func (*AdminLogin) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{9}
}

func (x *AdminLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  AdminResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AdminResponse_Status" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*AdminResponse_Error
	//	*AdminResponse_Data
	Payload isAdminResponse_Payload `protobuf_oneof:"payload"`
}

func (x *AdminResponse) Reset() {
	*x = AdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminResponse) ProtoMessage() {}

func (x *AdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminResponse.ProtoReflect.Descriptor instead.
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return file_admin_proto_rawDescGZIP(), []int{10}
}

func (x *AdminResponse) GetStatus() AdminResponse_Status {
	if x != nil {
		return x.Status
	}
	return AdminResponse_OK
}

func (x *AdminResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *AdminResponse) GetPayload() isAdminResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AdminResponse) GetError() string {
	if x, ok := x.GetPayload().(*AdminResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *AdminResponse) GetData() string {
	if x, ok := x.GetPayload().(*AdminResponse_Data); ok {
		return x.Data
	}
	return ""
}

type isAdminResponse_Payload interface {
	isAdminResponse_Payload()
}

type AdminResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type AdminResponse_Data struct {
	Data string `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*AdminResponse_Error) isAdminResponse_Payload() {}

func (*AdminResponse_Data) isAdminResponse_Payload() {}

var File_admin_proto protoreflect.FileDescriptor

var file_admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x38, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x0a,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1b,
	0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x20, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0xfe, 0x02, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x5f, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x42, 0x69, 0x64, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x42,
	0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x42, 0x69,
	0x64, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x42, 0x69, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x45, 0x6e, 0x64, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x42, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x4f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x16, 0x0a, 0x04, 0x41, 0x64, 0x49, 0x44, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x46,
	0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e,
	0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xb1,
	0x01, 0x0a, 0x0d, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x32, 0xdb, 0x05, 0x0a, 0x0c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x39, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x11, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x08, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x39, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44, 0x1a, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x0b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x49, 0x44,
	0x1a, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_proto_rawDescOnce sync.Once
	file_admin_proto_rawDescData = file_admin_proto_rawDesc
)

func file_admin_proto_rawDescGZIP() []byte {
	file_admin_proto_rawDescOnce.Do(func() {
		file_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_proto_rawDescData)
	})
	return file_admin_proto_rawDescData
}

var file_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_admin_proto_goTypes = []interface{}{
	(AdminResponse_Status)(0), // 0: pb.AdminResponse.Status
	(*AdminOrderList)(nil),    // 1: pb.AdminOrderList
	(*AdminOrder)(nil),        // 2: pb.AdminOrder
	(*Amount)(nil),            // 3: pb.Amount
	(*AdminProductList)(nil),  // 4: pb.AdminProductList
	(*AdminProduct)(nil),      // 5: pb.AdminProduct
	(*AdminNoParam)(nil),      // 6: pb.AdminNoParam
	(*AdID)(nil),              // 7: pb.AdID
	(*AdminCategoryList)(nil), // 8: pb.AdminCategoryList
	(*AdminCategory)(nil),     // 9: pb.AdminCategory
	(*AdminLogin)(nil),        // 10: pb.AdminLogin
	(*AdminResponse)(nil),     // 11: pb.AdminResponse
}
var file_admin_proto_depIdxs = []int32{
	2,  // 0: pb.AdminOrderList.Orders:type_name -> pb.AdminOrder
	5,  // 1: pb.AdminProductList.Products:type_name -> pb.AdminProduct
	9,  // 2: pb.AdminProduct.Category:type_name -> pb.AdminCategory
	9,  // 3: pb.AdminCategoryList.Categories:type_name -> pb.AdminCategory
	0,  // 4: pb.AdminResponse.status:type_name -> pb.AdminResponse.Status
	10, // 5: pb.AdminService.AdminLoginRequest:input_type -> pb.AdminLogin
	3,  // 6: pb.AdminService.AddToAdminWallet:input_type -> pb.Amount
	9,  // 7: pb.AdminService.AddCategory:input_type -> pb.AdminCategory
	7,  // 8: pb.AdminService.FindCategory:input_type -> pb.AdID
	6,  // 9: pb.AdminService.FindCategories:input_type -> pb.AdminNoParam
	9,  // 10: pb.AdminService.EditCategoryAdmin:input_type -> pb.AdminCategory
	7,  // 11: pb.AdminService.RemoveCategoryAdmin:input_type -> pb.AdID
	7,  // 12: pb.AdminService.FindProductByID:input_type -> pb.AdID
	6,  // 13: pb.AdminService.FindAllProducts:input_type -> pb.AdminNoParam
	7,  // 14: pb.AdminService.RemoveProduct:input_type -> pb.AdID
	7,  // 15: pb.AdminService.AdminBlockUser:input_type -> pb.AdID
	6,  // 16: pb.AdminService.FetchOrders:input_type -> pb.AdminNoParam
	7,  // 17: pb.AdminService.FetchOrderByUser:input_type -> pb.AdID
	7,  // 18: pb.AdminService.FetchOrder:input_type -> pb.AdID
	11, // 19: pb.AdminService.AdminLoginRequest:output_type -> pb.AdminResponse
	11, // 20: pb.AdminService.AddToAdminWallet:output_type -> pb.AdminResponse
	11, // 21: pb.AdminService.AddCategory:output_type -> pb.AdminResponse
	9,  // 22: pb.AdminService.FindCategory:output_type -> pb.AdminCategory
	8,  // 23: pb.AdminService.FindCategories:output_type -> pb.AdminCategoryList
	9,  // 24: pb.AdminService.EditCategoryAdmin:output_type -> pb.AdminCategory
	11, // 25: pb.AdminService.RemoveCategoryAdmin:output_type -> pb.AdminResponse
	5,  // 26: pb.AdminService.FindProductByID:output_type -> pb.AdminProduct
	4,  // 27: pb.AdminService.FindAllProducts:output_type -> pb.AdminProductList
	11, // 28: pb.AdminService.RemoveProduct:output_type -> pb.AdminResponse
	11, // 29: pb.AdminService.AdminBlockUser:output_type -> pb.AdminResponse
	1,  // 30: pb.AdminService.FetchOrders:output_type -> pb.AdminOrderList
	1,  // 31: pb.AdminService.FetchOrderByUser:output_type -> pb.AdminOrderList
	2,  // 32: pb.AdminService.FetchOrder:output_type -> pb.AdminOrder
	19, // [19:33] is the sub-list for method output_type
	5,  // [5:19] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_admin_proto_init() }
func file_admin_proto_init() {
	if File_admin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminProductList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminNoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCategoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_admin_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AdminResponse_Error)(nil),
		(*AdminResponse_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_proto_goTypes,
		DependencyIndexes: file_admin_proto_depIdxs,
		EnumInfos:         file_admin_proto_enumTypes,
		MessageInfos:      file_admin_proto_msgTypes,
	}.Build()
	File_admin_proto = out.File
	file_admin_proto_rawDesc = nil
	file_admin_proto_goTypes = nil
	file_admin_proto_depIdxs = nil
}
